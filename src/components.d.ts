/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';
import '@stencil/state-tunnel';

import {
  MatchResults,
} from '@stencil/router';

declare global {

  namespace StencilComponents {
    interface AppHome {

    }
  }

  interface HTMLAppHomeElement extends StencilComponents.AppHome, HTMLStencilElement {}

  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-home': JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppProfile {
      'match': MatchResults;
    }
  }

  interface HTMLAppProfileElement extends StencilComponents.AppProfile, HTMLStencilElement {}

  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };
  interface HTMLElementTagNameMap {
    'app-profile': HTMLAppProfileElement;
  }
  interface ElementTagNameMap {
    'app-profile': HTMLAppProfileElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-profile': JSXElements.AppProfileAttributes;
    }
  }
  namespace JSXElements {
    export interface AppProfileAttributes extends HTMLAttributes {
      'match'?: MatchResults;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppRoot {

    }
  }

  interface HTMLAppRootElement extends StencilComponents.AppRoot, HTMLStencilElement {}

  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-root': JSXElements.AppRootAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRootAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface OkButton {
      'disabled': boolean;
      'flag': string;
      'ghost': boolean;
      'label': string;
    }
  }

  interface HTMLOkButtonElement extends StencilComponents.OkButton, HTMLStencilElement {}

  var HTMLOkButtonElement: {
    prototype: HTMLOkButtonElement;
    new (): HTMLOkButtonElement;
  };
  interface HTMLElementTagNameMap {
    'ok-button': HTMLOkButtonElement;
  }
  interface ElementTagNameMap {
    'ok-button': HTMLOkButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ok-button': JSXElements.OkButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface OkButtonAttributes extends HTMLAttributes {
      'disabled'?: boolean;
      'flag'?: string;
      'ghost'?: boolean;
      'label'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface OkPreviewBook {
      'components': {
    tag: string;
    knobs?: Object;
    notes?: string;
  }[];
    }
  }

  interface HTMLOkPreviewBookElement extends StencilComponents.OkPreviewBook, HTMLStencilElement {}

  var HTMLOkPreviewBookElement: {
    prototype: HTMLOkPreviewBookElement;
    new (): HTMLOkPreviewBookElement;
  };
  interface HTMLElementTagNameMap {
    'ok-preview-book': HTMLOkPreviewBookElement;
  }
  interface ElementTagNameMap {
    'ok-preview-book': HTMLOkPreviewBookElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ok-preview-book': JSXElements.OkPreviewBookAttributes;
    }
  }
  namespace JSXElements {
    export interface OkPreviewBookAttributes extends HTMLAttributes {
      'components'?: {
    tag: string;
    knobs?: Object;
    notes?: string;
  }[];
    }
  }
}


declare global {

  namespace StencilComponents {
    interface OkPreview {
      'knobs': Object;
      'notes': Object;
      'tag': string;
    }
  }

  interface HTMLOkPreviewElement extends StencilComponents.OkPreview, HTMLStencilElement {}

  var HTMLOkPreviewElement: {
    prototype: HTMLOkPreviewElement;
    new (): HTMLOkPreviewElement;
  };
  interface HTMLElementTagNameMap {
    'ok-preview': HTMLOkPreviewElement;
  }
  interface ElementTagNameMap {
    'ok-preview': HTMLOkPreviewElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ok-preview': JSXElements.OkPreviewAttributes;
    }
  }
  namespace JSXElements {
    export interface OkPreviewAttributes extends HTMLAttributes {
      'knobs'?: Object;
      'notes'?: Object;
      'tag'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface OkToggle {
      'disabled': boolean;
    }
  }

  interface HTMLOkToggleElement extends StencilComponents.OkToggle, HTMLStencilElement {}

  var HTMLOkToggleElement: {
    prototype: HTMLOkToggleElement;
    new (): HTMLOkToggleElement;
  };
  interface HTMLElementTagNameMap {
    'ok-toggle': HTMLOkToggleElement;
  }
  interface ElementTagNameMap {
    'ok-toggle': HTMLOkToggleElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ok-toggle': JSXElements.OkToggleAttributes;
    }
  }
  namespace JSXElements {
    export interface OkToggleAttributes extends HTMLAttributes {
      'disabled'?: boolean;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
